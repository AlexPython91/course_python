#  В большой текстовой строке подсчитать количество встречаемых
# слов и вернуть 10 самых частых. Не учитывать знаки препинания
# и регистр символов. За основу возьмите любую статью
# из википедии или из документации к языку.
import re
from collections import Counter

text = "Python — это высокоуровневый язык программирования общего назначения, который используется в том числе " \
       "и для разработки веб-приложений. Язык ориентирован на повышение производительности разработчика и " \
       "читаемости кода. Python поддерживает несколько парадигм программирования: структурное, объектно-" \
       "ориентированное, функциональное, императивное и аспектно-ориентированное. В языке присутствет " \
       "динамическая типизация, автоматическое управление памятью, полная интроспекция, механизм обработки " \
       "исключений, поддержка многопоточных вычислений и удобные высокоуровневые структуры данных. Программный " \
       "код на Python организовывается в функции и классы, которые могут объединяться в модули, а они в свою " \
       "очередь могут быть объединены в пакеты. Python обычно используется как интерпретируемый, но может быть " \
       "скомпилирован в байт-код Java и в MSIL (в рамках платфоры .NET). По производительности интерпретируемый " \
       "Python похож на все остальные подобные языки, но возможность компиляции в байт-код позволяет добиться" \
       " большей производительности. По сравнению с Ruby и некоторыми другими языками, в Python отсутствует " \
       "озможность модифицировать встроенные классы, такие, как int, str, float, list и другие. В Python " \
       "присутствует глобальная блокировка интерпретатора (GIL) — при своей работе основной интерпретатор" \
       " постоянно использует большое количество потоко-небезопасных данных. В основном это словари, в которых " \
       "хранятся атрибуты объектов, и обращения к внешнему коду, поэтому, во избежание разрушения этих данных при " \
       "совместной модификации из разных потоков, перед началом исполнения нескольких инструкций (обычно ста) " \
       "поток интерпретатора захватывает GIL, а по окончании освобождает."

text = re.sub(r'[^\w\s]', '', text)

word_counts = Counter(text.split())

most_common_words = word_counts.most_common(10)

print(f"Number of repeated words: {len(word_counts)}")
print("The 10 most frequent words are:")
for word, count in most_common_words:
    print(f' - {word} = {count}')
